[
  {
    "objectID": "docs_backup/UNGDC_topic_modeling_updated.html",
    "href": "docs_backup/UNGDC_topic_modeling_updated.html",
    "title": "Dynamic UNGDC (updated)",
    "section": "",
    "text": "This version does use tf-idf for LDA analysis. For the older version, refer to UNGDC_topic_modeling.qmd. I created a separate version for two reasons. First, some of the functions and options deprecated from the quanteda R package. Earlier version might not be reproducible. Second, the inclusion of tf-idf to generate LDA analysis has a tradeoff. Since it gives less weights to terms that appear frequently across the documents, by definition, tf-idf lowers the correlation between terms over different time window. It is harder to notice a clear linkage between two topics represented by different terms. However, unlike the earlier version that excludes tf-idf, topics are more specific, and substantively meaningful."
  },
  {
    "objectID": "docs_backup/UNGDC_topic_modeling_updated.html#dynamic-topic-modeling-for-ungdc",
    "href": "docs_backup/UNGDC_topic_modeling_updated.html#dynamic-topic-modeling-for-ungdc",
    "title": "Dynamic UNGDC (updated)",
    "section": "Dynamic Topic Modeling for UNGDC",
    "text": "Dynamic Topic Modeling for UNGDC\nIn order to generate LDA topic modeling results for the corpus of UNGD, I split the corpus into different time frames. The entire time span of 1945 until 2022 is split into 8 intervals, with a duration of 10 years.\n\n# Load packages\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(tm)\nlibrary(gplots)\nlibrary(ggplot2)\nlibrary(quanteda)\nlibrary(readr)\nlibrary(seededlda)\nlibrary(slam)\nlibrary(jsonlite)\nlibrary(tm)\nlibrary(tidyr)\nlibrary(knitr)\n\nlight &lt;- readRDS(\"data/processed/cleaned.RDS\")\n\n#Set up the parameters\nlight_interval &lt;- light %&gt;%\n  dplyr::mutate(span = as.factor(cut(year,\n                                     breaks = c(seq(from = 1945, to = 2022, by = 10), 2022)))) %&gt;%\n  dplyr::arrange(year)\n\n\n# I added two additional stop words that aren't captured in the generic stop words dictionary. \n\nmystopwords &lt;- c(\"will\", \"must\")\ncustom_stopwords &lt;- c(stopwords(\"english\"), mystopwords)"
  },
  {
    "objectID": "docs_backup/UNGDC_topic_modeling_updated.html#term-frequency-inverse-matrix-and-descriptive-data-visualization",
    "href": "docs_backup/UNGDC_topic_modeling_updated.html#term-frequency-inverse-matrix-and-descriptive-data-visualization",
    "title": "Dynamic UNGDC (updated)",
    "section": "Term Frequency-Inverse Matrix and Descriptive Data Visualization",
    "text": "Term Frequency-Inverse Matrix and Descriptive Data Visualization\n\nTo inspect the data and frequent words across time intervals, below code generates top-20 terms based on the tf-idf scores.\nInput dataset: “data/processed/cleaned.RDS”.\n\n\n# Function for generating tf_idf and plots.\nsapply(levels(light_interval$span), function(i) {\n  subset_i &lt;- light_interval %&gt;% dplyr::filter(span %in% i)\n  corpus_subset &lt;- Corpus(VectorSource(subset_i$text))\n  tdm &lt;- TermDocumentMatrix(corpus_subset,\n                            control = list(weighting = weightTfIdf,\n                                           removePunctuation = TRUE,\n                                           stemming = TRUE,\n                                           removeNumbers = TRUE,\n                                           stopwords = TRUE,\n                                           removewords = mystopwords))\n  top_terms &lt;- slam::row_sums(as.matrix(tdm))\n  \n  # Create a data frame with terms and tfidf values\n  top_terms_df &lt;- data.frame(term = names(top_terms), tfidf = top_terms)\n  \n  # Order the terms by tfidf value\n  top_terms_df &lt;- top_terms_df[order(top_terms_df$tfidf, decreasing = TRUE), ]\n  \n  # Select the top 20 terms\n  top_terms_df &lt;- head(top_terms_df, 20)\n  \n  figure_i &lt;- ggplot(top_terms_df, aes(x = reorder(term, tfidf), y = tfidf)) +\n    geom_bar(stat = \"identity\", fill = \"skyblue\") +\n    theme_minimal() +\n    labs(title = \"Top 20 Terms by TF-IDF\",\n         x = \"Terms\",\n         y = \"TF-IDF Score\") +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n  \n  output_file &lt;- file.path(\"figs/\", paste0(\"plot_\", i, \".png\"))\n  ggsave(output_file, figure_i, width = 8, height = 5, units = \"in\")\n})\n\n\ndfm function helps remove stop words and perform other preprocessing steps to create a more refined document-feature matrix. Additionally, the subsequent dfm_tfidf function is used to compute TF-IDF (Term Frequency-Inverse Document Frequency) scores, which down-weights terms that appear frequently across documents."
  },
  {
    "objectID": "docs_backup/UNGDC_topic_modeling_updated.html#reading-in-lda-results",
    "href": "docs_backup/UNGDC_topic_modeling_updated.html#reading-in-lda-results",
    "title": "Dynamic UNGDC (updated)",
    "section": "Reading in LDA results",
    "text": "Reading in LDA results\nAfter running the LDA model, I read in each LDA results as a separate element in a list form. Below code prins out top 10 terms associated with each topic in the LDA models for different span levels. Each row represents one semantic topic.\n\nread_lda_models &lt;- function(span_levels, output_dir = \"output/lda/decade_0120_replicate/\") {\n  lda_models &lt;- list()\n\n  for (i in span_levels) {\n    lda_output_file &lt;- file.path(output_dir, paste0(\"lda_model_\", i, \".RDS\"))\n    \n    print(lda_output_file)\n\n    if (file.exists(lda_output_file)) {\n      lda_model &lt;- readRDS(lda_output_file)\n      lda_models[[i]] &lt;- lda_model\n      cat(sprintf(\"LDA model for %s successfully loaded.\\n\", i))\n    } else {\n      cat(sprintf(\"LDA model file for %s not found.\\n\", i))\n    }\n  }\n\n  return(lda_models)\n}\n\n\n\nlda_models &lt;- read_lda_models(span_levels)\n\n[1] \"output/lda/decade_0120_replicate//lda_model_(1945,1955].RDS\"\nLDA model for (1945,1955] successfully loaded.\n[1] \"output/lda/decade_0120_replicate//lda_model_(1955,1965].RDS\"\nLDA model for (1955,1965] successfully loaded.\n[1] \"output/lda/decade_0120_replicate//lda_model_(1965,1975].RDS\"\nLDA model for (1965,1975] successfully loaded.\n[1] \"output/lda/decade_0120_replicate//lda_model_(1975,1985].RDS\"\nLDA model for (1975,1985] successfully loaded.\n[1] \"output/lda/decade_0120_replicate//lda_model_(1985,1995].RDS\"\nLDA model for (1985,1995] successfully loaded.\n[1] \"output/lda/decade_0120_replicate//lda_model_(1995,2005].RDS\"\nLDA model for (1995,2005] successfully loaded.\n[1] \"output/lda/decade_0120_replicate//lda_model_(2005,2015].RDS\"\nLDA model for (2005,2015] successfully loaded.\n[1] \"output/lda/decade_0120_replicate//lda_model_(2015,2022].RDS\"\nLDA model for (2015,2022] successfully loaded.\n\ntopic_tables &lt;- function(lda_models, span_levels) {\n  topic_tables &lt;- list()\n\n  for (i in span_levels) {\n    if (i %in% names(lda_models)) {\n      lda_model &lt;- lda_models[[i]]\n      terms &lt;- terms(lda_model, 10)\n      topic_table &lt;- data.frame(Terms = terms)\n      topic_tables[[i]] &lt;- topic_table\n    } else {\n      cat(sprintf(\"LDA model for %s not found.\\n\", i))\n    }\n  }\n\n  all_topics &lt;- do.call(rbind, topic_tables)\n  return(all_topics)\n}\n\n\ntopic_tables &lt;- topic_tables(lda_models, span_levels)\nprint(knitr::kable(topic_tables))\n\n\n\n|               |Terms.topic1  |Terms.topic2 |Terms.topic3 |Terms.topic4 |Terms.topic5 |Terms.topic6 |Terms.topic7 |Terms.topic8 |Terms.topic9  |Terms.topic10 |\n|:--------------|:-------------|:------------|:------------|:------------|:------------|:------------|:------------|:------------|:-------------|:-------------|\n|(1945,1955].1  |ussr          |arab         |german       |argentin     |bolivia      |hyderabad    |netherland   |resumpt      |communist     |india         |\n|(1945,1955].2  |soviet        |israel       |czechoslovak |latin        |cuba         |egypt        |bandung      |korea        |soviet        |australian    |\n|(1945,1955].3  |yugoslav      |palestin     |polish       |trade        |greek        |india        |african      |collect      |chines        |commiss       |\n|(1945,1955].4  |atom          |jerusalem    |soviet       |chile        |greec        |sudan        |south        |recommend    |communism     |council       |\n|(1945,1955].5  |yugoslavia    |morocco      |germani      |uruguay      |dominican    |egyptian     |geneva       |independ     |china         |think         |\n|(1945,1955].6  |armament      |tunisia      |people’      |veto         |guatemala    |pakistan     |africa       |leader       |korea         |say           |\n|(1945,1955].7  |union         |jew          |poland       |american     |colombia     |el           |indonesia    |europ        |union         |veto          |\n|(1945,1955].8  |prohibit      |refuge       |weapon       |panama       |bolivian     |salvador     |thailand     |veto         |imprison      |soviet        |\n|(1945,1955].9  |weapon        |jewish       |hydrogen     |venezuela    |guatemalan   |sudanes      |zealand      |revis        |costa         |china         |\n|(1945,1955].10 |american      |franc        |european     |per          |cuban        |british      |asia         |collabor     |mainland      |arbitr        |\n|(1955,1965].1  |particip      |bantu        |malaysia     |cambodia     |netherland   |pakistan     |american     |african      |german        |arab          |\n|(1955,1965].2  |moscow        |iceland      |zealand      |lao          |congo        |cyprus       |cuba         |africa       |socialist     |israel        |\n|(1955,1965].3  |industri      |south        |australia    |spain        |indonesia    |turkish      |cuban        |portug       |soviet        |palestin      |\n|(1955,1965].4  |coexist       |indian       |philippin    |communist    |irian        |kashmir      |panama       |mali         |czechoslovak  |egypt         |\n|(1955,1965].5  |fund          |canada       |malaya       |viet         |nigeria      |india        |guatemala    |portugues    |albania       |algerian      |\n|(1955,1965].6  |cent          |canadian     |australian   |spanish      |berlin       |turkey       |dominican    |somali       |romanian      |libya         |\n|(1955,1965].7  |trade         |danish       |feder        |chines       |belgian      |greek        |venezuela    |congo        |germani       |franc         |\n|(1955,1965].8  |scienc        |goa          |india        |cambodian    |indonesian   |greec        |latin        |austrian     |byelorussian  |libyan        |\n|(1955,1965].9  |concept       |africa       |indonesia    |pathet       |west         |nepal        |america      |cameroon     |nato          |canal         |\n|(1955,1965].10 |invest        |chairman     |manila       |royal        |want         |jammu        |paraguay     |malagasi     |albanian      |jordan        |\n|(1965,1975].1  |like          |pakistan     |african      |imperialist  |like         |israel       |austria      |cuba         |turkey        |haiti         |\n|(1965,1975].2  |programm      |india        |ghana        |khmer        |socialist    |arab         |spain        |iceland      |cyprus        |oil           |\n|(1965,1975].3  |nuclear       |zealand      |rwanda       |aggress      |soviet       |isra         |salvador     |venezuela    |turkish       |australia     |\n|(1965,1975].4  |big           |ireland      |portug       |imperi       |german       |palestin     |italian      |cuban        |argentina     |haitian       |\n|(1965,1975].5  |neighbour     |netherland   |uganda       |revisionist  |mongolian    |zionist      |el           |panama       |greec         |volta         |\n|(1965,1975].6  |space         |japan        |burundi      |albania      |byelorussian |palestinian  |itali        |bolivia      |argentin      |philippin     |\n|(1965,1975].7  |strategi      |burma        |africa       |albanian     |ssr          |yemen        |gibraltar    |zair         |peru          |price         |\n|(1965,1975].8  |franc         |kashmir      |portugues    |viet         |czechoslovak |israel’      |rica         |chile        |greek         |upper         |\n|(1965,1975].9  |youth         |fiji         |kenya        |cambodia     |ukrainian    |aggress      |hondura      |latin        |brazil        |food          |\n|(1965,1975].10 |madam         |pacif        |oau          |chines       |europ        |iraq         |uruguay      |dominican    |dahomey       |australian    |\n|(1975,1985].1  |malta         |soviet       |ireland      |imperialist  |turkey       |benin        |guinea       |pleasur      |guatemala     |¬             |\n|(1975,1985].2  |zionist       |japan        |panama       |vietnames    |yemen        |burundi      |papua        |dialog       |uganda        |barbado       |\n|(1975,1985].3  |bahama        |europ        |ecuador      |kampuchea    |egypt        |mali         |zealand      |cooper       |timor         |paraguay      |\n|(1975,1985].4  |itali         |german       |latin        |chines       |morocco      |rwanda       |pacif        |program      |nicaragua     |ghana         |\n|(1975,1985].5  |iranian       |union        |bolivia      |lao          |turkish      |seneg        |chad         |per          |guinea        |tion          |\n|(1975,1985].6  |iraqi         |socialist    |dominican    |thailand     |pakistan     |zair         |bangladesh   |refuge       |hondura       |guyana        |\n|(1975,1985].7  |mediterranean |mongolian    |rica         |nam          |sudan        |oau          |australia    |india        |salvador      |ment          |\n|(1975,1985].8  |tobago        |poland       |costa        |viet         |arab         |kenya        |surinam      |fortieth     |revolutionari |con           |\n|(1975,1985].9  |libyan        |austria      |spain        |ethiopia     |islam        |chad         |equatori     |sea          |guatemalan    |venezuela     |\n|(1975,1985].10 |islam         |detent       |american     |romania      |isra         |mauritania   |canada       |indian       |angola        |caribbean     |\n|(1985,1995].1  |wish          |wish         |wish         |panama       |wish         |wish         |wish         |wish         |wish          |wish          |\n|(1985,1995].2  |paraguay      |co           |islam        |burundi      |guinea       |canada       |european     |saint        |cooper        |malawi        |\n|(1985,1995].3  |american      |organis      |arab         |myanmar      |pacif        |netherland   |europ        |bahama       |boutro        |african       |\n|(1985,1995].4  |latin         |program      |sri          |rwanda       |viet         |philippin    |ukrain       |nepal        |eighth        |chad          |\n|(1985,1995].5  |bolivia       |dialog       |iranian      |romania      |nam          |want         |albania      |caribbean    |bosnia        |niger         |\n|(1985,1995].6  |dominican     |twelv        |lebanon      |zair         |japan        |revolut      |belarus      |pakistan     |herzegovina   |swaziland     |\n|(1985,1995].7  |ecuador       |align        |lanka        |panamanian   |equatori     |canadian     |poland       |barbado      |somalia       |uganda        |\n|(1985,1995].8  |hondura       |namibia      |iraqi        |belgium      |solomon      |let          |csce         |haiti        |l993          |kenya         |\n|(1985,1995].9  |chile         |disarma      |ireland      |canal        |zealand      |enemi        |austria      |surinam      |fiftieth      |benin         |\n|(1985,1995].10 |costa         |drug         |tunisia      |rwandes      |papua        |children     |croatia      |india        |npt           |angola        |\n|(1995,2005].1  |outset        |outset       |outset       |outset       |outset       |outset       |outset       |outset       |outset        |outset        |\n|(1995,2005].2  |african       |azerbaijan   |island       |korea        |croatia      |marino       |trinidad     |afghanistan  |arab          |sri           |\n|(1995,2005].3  |africa        |cyprus       |caribbean    |korean       |european     |san          |tobago       |taliban      |iraq          |ethiopia      |\n|(1995,2005].4  |guinea        |tajikistan   |pacif        |nepal        |herzegovina  |women        |belarus      |swaziland    |israel        |lanka         |\n|(1995,2005].5  |congo         |armenia      |saint        |pakistan     |mongolia     |sixtieth     |slovakia     |ecuador      |palestinian   |eritrea       |\n|(1995,2005].6  |malawi        |turkmenistan |papua        |ireland      |kosovo       |iraq         |panama       |bolivia      |isra          |andorra       |\n|(1995,2005].7  |chad          |turkey       |bahama       |thailand     |€            |outcom       |haiti        |myanmar      |lebanon       |eritrean      |\n|(1995,2005].8  |burundi       |kazakhstan   |barbado      |asean        |latvia       |weapon       |mexico       |estonia      |malta         |cuba          |\n|(1995,2005].9  |liberia       |georgia      |solomon      |monaco       |bosnia       |document     |guatemala    |chile        |kuwait        |truth         |\n|(1995,2005].10 |uganda        |turkish      |small        |india        |bulgaria     |uruguay      |dominican    |paraguay     |iraqi         |muslim        |\n|(2005,2015].1  |everi         |everi        |everi        |everi        |everi        |everi        |everi        |everi        |everi         |everi         |\n|(2005,2015].2  |nepal         |pakistan     |serbia       |japan        |mdgs         |guinea       |island       |arab         |ecuador       |azerbaijan    |\n|(2005,2015].3  |iceland       |iran         |fiji         |timor        |treati       |african      |sid          |yemen        |panama        |georgia       |\n|(2005,2015].4  |trinidad      |muslim       |european     |mongolia     |g            |korea        |pacif        |kuwait       |paraguay      |asean         |\n|(2005,2015].5  |burundi       |islam        |kosovo       |ireland      |nuclear      |mali         |solomon      |syrian       |marino        |kazakhstan    |\n|(2005,2015].6  |sri           |god          |bosnia       |lest         |mediat       |somalia      |saint        |iraq         |peru          |ukrain        |\n|(2005,2015].7  |tobago        |war          |herzegovina  |bangladesh   |disput       |korean       |bahama       |lebanon      |america       |afghanistan   |\n|(2005,2015].8  |canada        |nuclear      |cyprus       |latvia       |disarma      |sudan        |caribbean    |palestinian  |american      |moldova       |\n|(2005,2015].9  |malawi        |want         |malta        |cambodia     |migrat       |philippin    |grenada      |egypt        |latin         |thailand      |\n|(2005,2015].10 |zambia        |israel       |croatia      |australia    |multilater   |bissau       |small        |libya        |bolivia       |turkmenistan  |\n|(2015,2022].1  |distinct      |african      |israel       |distinct     |ukrain       |india        |pacif        |bosnia       |pandem        |korea         |\n|(2015,2022].2  |peacekeep     |mali         |syrian       |azerbaijan   |european     |pakistan     |island       |herzegovina  |covid         |malaysia      |\n|(2015,2022].3  |andorra       |sudan        |iran         |armenia      |russian      |sri          |ocean        |saint        |un            |asean         |\n|(2015,2022].4  |trade         |sahel        |brazil       |trinidad     |russia       |lanka        |solomon      |caribbean    |vaccin        |mongolia      |\n|(2015,2022].5  |weapon        |congo        |colombia     |tobago       |eu           |costa        |tonga        |beliz        |75th          |thailand      |\n|(2015,2022].6  |migrant       |chad         |spain        |burundi      |ireland      |bangladesh   |papua        |mauritius    |marino        |kazakhstan    |\n|(2015,2022].7  |educ          |guinea       |venezuela    |kingdom      |georgia      |canada       |australia    |nepal        |bhutan        |turkmenistan  |\n|(2015,2022].8  |energi        |africa       |iraq         |morocco      |serbia       |rica         |tanzania     |guatemala    |kenya         |japan         |\n|(2015,2022].9  |refuge        |madagascar   |palestinian  |arab         |europ        |kashmir      |micronesia   |moldova      |botswana      |kyrgyzstan    |\n|(2015,2022].10 |sdgs          |burkina      |lebanon      |yemeni       |montenegro   |muslim       |tuvalu       |bahama       |somalia       |tajikistan    |\n\n\n\nEach column in the dataset corresponds to a vector of terms representing a specific topic. However, extracting substantively meaningful topics poses challenges due to several issues. One notable challenge is the variability in the set of terms used to represent the same topic across different time periods. For instance, the topic of international security may be discussed in relation to the Soviet Union and North Korea in earlier time periods, whereas in more recent times, it may be associated with Russia and Ukraine.\nAnother important problem is identifying related topics over time. There is a difficulty of establishing connections between topics and understanding their evolution across different temporal contexts. Some topics and terms disappear abruptly, while new topics emerge. Identifying the connection between vectors poses a challenge."
  },
  {
    "objectID": "docs_backup/UNGDC_topic_modeling_updated.html#dynamic-topic-modeling",
    "href": "docs_backup/UNGDC_topic_modeling_updated.html#dynamic-topic-modeling",
    "title": "Dynamic UNGDC (updated)",
    "section": "Dynamic Topic Modeling",
    "text": "Dynamic Topic Modeling\n\nTo address the above mentioned challenges, we refered to existing papers.\n\"BERTopic Dynamic Topic Modeling\"(https://maartengr.github.io/BERTopic/getting_started/topicsovertime/topicsovertime.html)\nGreene and cross, 2017 (https://doi.org/10.1017/pan.2016.7)\n\n\nThis generates output for a single pair of time frames\n\nmodel1&lt;-lda_models[[1]]\nmodel2&lt;-lda_models[[2]]\n\n# phi value is a topic probability of every word\nphi1 &lt;- model1$phi\n\n#phi1$topic &lt;- sequence(nrow(phi1))\n\nphi2 &lt;- model2$phi\n#phi2$topic &lt;- sequence(nrow(phi2))\n\n\n# Convert matrices to data frames\nphi1_df &lt;- as.data.frame(phi1)\nphi2_df &lt;- as.data.frame(phi2)\n\norder_phi1 &lt;- order(colMeans(phi1_df), decreasing = TRUE)\norder_phi2 &lt;- order(colMeans(phi2_df), decreasing = TRUE)\n\n# Reorder columns based on the mean\nphi1_df &lt;- phi1_df[, order_phi1]\nphi2_df &lt;- phi2_df[, order_phi2]\n\n# Identify columns to drop based on colMeans\n## Try without dropping\ncolumns_to_drop_phi1 &lt;- colMeans(phi1_df) &lt; 0.00001\ncolumns_to_drop_phi2 &lt;- colMeans(phi2_df) &lt; 0.00001\n\n# Drop identified columns\nphi1_df &lt;- phi1_df[, !columns_to_drop_phi1, drop = FALSE]\nphi2_df &lt;- phi2_df[, !columns_to_drop_phi2, drop = FALSE]\n\n\n# Get the union of column names\nall_terms &lt;- union(colnames(phi1_df), colnames(phi2_df))\n\n#fill missing values with zeros\nphi1_union &lt;- bind_cols(phi1_df, setNames(data.frame(matrix(0, nrow = nrow(phi1_df), ncol = length(setdiff(all_terms, colnames(phi1_df))))), setdiff(all_terms, colnames(phi1_df))))\nphi2_union &lt;- bind_cols(phi2_df, setNames(data.frame(matrix(0, nrow = nrow(phi2_df), ncol = length(setdiff(all_terms, colnames(phi2_df))))), setdiff(all_terms, colnames(phi2_df))))\n\n# Reorder columns alphabetically\nphi1_union &lt;- phi1_union[, order(colnames(phi1_union))]\nphi2_union &lt;- phi2_union[, order(colnames(phi2_union))]\n\n\ndim(phi1_union)\ndim(phi2_union)\n\n\ncor&lt;-cor(t(phi1_union), t(phi2_union))\n\n\nheatmap.2(cor,\n          Rowv = FALSE, Colv = FALSE,\n          col = heat.colors(256),\n          trace = \"none\", # no row/column names\n          key = TRUE, keysize = 1.5,\n          density.info = \"none\", margins = c(5, 5),\n          cexCol = 1, cexRow = 1, # adjust text size\n          notecol = \"black\", notecex = 0.7,\n          main = \"Correlation Matrix\",\n          xlab = \"Period 2\", ylab = \"Period 1\",\n          symkey = FALSE)\n\norder_phi1_union &lt;- order(colMeans(phi1_union), decreasing = TRUE)\nphi1_result &lt;- phi1_union[, order_phi1_union]\n\norder_phi2_union &lt;- order(colMeans(phi2_union), decreasing = TRUE)\nphi2_result &lt;- phi2_union[, order_phi2_union]\n\n\nphi1_result_row &lt;- orderBasedOnRow(phi1_union, 1)\nphi1_result_long&lt;-phi1_result_row%&gt;%\n  tidyr::pivot_longer(everything(), names_to=\"term_1\", values_to=\"probability_1\")\n\nphi2_result_row &lt;- orderBasedOnRow(phi2_union, 6)\nphi2_result_long&lt;-phi2_result_row%&gt;%\n  tidyr::pivot_longer(everything(), names_to=\"term_2\", values_to=\"probability_2\")\n\npair&lt;-bind_cols(phi1_result_long, phi2_result_long)\n\n#Function to print out the words\n\norderBasedOnRow &lt;- function(df, I) {\n  # Order columns based on the Ith row values\n  ordered_cols &lt;- order(apply(df, 2, function(x) x[I]), decreasing = TRUE)\n\n  # Reorder the data frame columns\n  ordered_df &lt;- df[, ordered_cols]\n\n  ordered_row &lt;- ordered_df[I, 1:10]\n\n  return(ordered_row)\n}"
  },
  {
    "objectID": "docs_backup/UNGDC_topic_modeling_updated.html#below-function-generates-heatmaps-for-a-pair-of-models.",
    "href": "docs_backup/UNGDC_topic_modeling_updated.html#below-function-generates-heatmaps-for-a-pair-of-models.",
    "title": "Dynamic UNGDC (updated)",
    "section": "Below function generates heatmaps for a pair of models.",
    "text": "Below function generates heatmaps for a pair of models.\n\ngenerate_heatmap &lt;- function(model1, model2, correlation_threshold = 0.9) {\n  phi1 &lt;- model1$phi\n  phi2 &lt;- model2$phi\n\n  phi1_df &lt;- as.data.frame(phi1)\n  phi2_df &lt;- as.data.frame(phi2)\n  \n  all_terms &lt;- union(colnames(phi1_df), colnames(phi2_df))\n\n  phi1_union &lt;- bind_cols(phi1_df, setNames(data.frame(matrix(0, nrow = nrow(phi1_df), ncol = length(setdiff(all_terms, colnames(phi1_df))))), setdiff(all_terms, colnames(phi1_df))))\n  phi2_union &lt;- bind_cols(phi2_df, setNames(data.frame(matrix(0, nrow = nrow(phi2_df), ncol = length(setdiff(all_terms, colnames(phi2_df))))), setdiff(all_terms, colnames(phi2_df))))\n\n  phi1_union &lt;- phi1_union[, order(colnames(phi1_union))]\n  phi2_union &lt;- phi2_union[, order(colnames(phi2_union))]\n\n  dim(phi1_union)\n  dim(phi2_union)\n\n  cor_matrix &lt;- cor(t(phi1_union), t(phi2_union))\n\n  # Heatmap for correlation matrix\n  heatmap.2(cor_matrix,\n            Rowv = FALSE, Colv = FALSE,\n            col = heat.colors(16),\n            trace = \"none\", # no row/column names\n            key = TRUE, keysize = 1.5,\n            density.info = \"none\", margins = c(5, 5),\n            cexCol = 1, cexRow = 1, # adjust text size\n            notecol = \"black\", notecex = 0.7,\n            xlab = \"Time 2\",\n            ylab = \"Time 1\",\n            symkey = FALSE)\n\n  return(list(phi1_union = phi1_union, phi2_union = phi2_union, cor_matrix = cor_matrix))\n}"
  },
  {
    "objectID": "docs_backup/UNGDC_topic_modeling_updated.html#rows-with-high-correlation",
    "href": "docs_backup/UNGDC_topic_modeling_updated.html#rows-with-high-correlation",
    "title": "Dynamic UNGDC (updated)",
    "section": "Rows with high correlation",
    "text": "Rows with high correlation\n\n# Function to print the ordered rows for each topic with high correlation\nprint_ordered_rows &lt;- function(phi1_union, phi2_union, cor_matrix, high_corr_indices, correlation_threshold = 0.9) {\n  # Find indices where correlation is higher than the threshold\n  high_corr_indices &lt;- which(cor_matrix &gt; correlation_threshold & !is.na(cor_matrix), arr.ind = TRUE)\n\n  # Create an empty list to store results\n  result_list &lt;- list()\n\n  # Print the ordered rows for each topic with high correlation\n  for (i in seq_len(nrow(high_corr_indices))) {\n    model1_topic &lt;- high_corr_indices[i, 1]\n    model2_topic &lt;- high_corr_indices[i, 2]\n\n    # Print the ordered rows for each model's topic\n    cat(paste(\"Model 1 - Topic\", model1_topic), \"\\n\")\n    phi1_result_row &lt;- orderBasedOnRow(phi1_union, model1_topic)\n\n    cat(paste(\"Model 2 - Topic\", model2_topic), \"\\n\")\n    phi2_result_row &lt;- orderBasedOnRow(phi2_union, model2_topic)\n\n    # Convert result rows to long format\n    phi1_result_long &lt;- phi1_result_row %&gt;%\n      tidyr::pivot_longer(everything(), names_to = \"term_1\", values_to = \"probability_1\")\n\n    phi2_result_long &lt;- phi2_result_row %&gt;%\n      tidyr::pivot_longer(everything(), names_to = \"term_2\", values_to = \"probability_2\")\n\n    # Combine phi1 and phi2 results\n    pair &lt;- bind_cols(phi1_result_long, phi2_result_long)\n\n    # Append the result to the list\n    result_list[[i]] &lt;- pair\n  }\n\n  # Combine all results into a single dataframe\n  final_result &lt;- do.call(bind_rows, result_list)\n\n  return(final_result)\n}"
  },
  {
    "objectID": "docs_backup/UNGDC_topic_modeling_updated.html#execute-functions-over-pairs",
    "href": "docs_backup/UNGDC_topic_modeling_updated.html#execute-functions-over-pairs",
    "title": "Dynamic UNGDC (updated)",
    "section": "Execute functions over pairs",
    "text": "Execute functions over pairs\n\n# Loop through pairs of models to generate heatmaps and print results\nfor (i in 1:(length(lda_models) - 1)) {\n  model1 &lt;- lda_models[[i]]\n  model2 &lt;- lda_models[[i + 1]]\n\n  result &lt;- generate_heatmap(model1, model2, correlation_threshold = 0.5)\n  \n  phi1_union &lt;- result$phi1_union\n  phi2_union &lt;- result$phi2_union\n  cor_matrix &lt;- result$cor_matrix\n\n  # Print ordered rows only if there are high correlations\n  if (any(cor_matrix &gt; 0.5, na.rm = TRUE)) {\n    phi1_result &lt;- phi1_union[, order(colMeans(phi1_union), decreasing = TRUE)]\n    phi2_result &lt;- phi2_union[, order(colMeans(phi2_union), decreasing = TRUE)]\n\n    # Call the modified function and pass high_corr_indices as an argument\n    final_result &lt;- print_ordered_rows(phi1_result, phi2_result, cor_matrix, high_corr_indices, correlation_threshold = 0.5)\n    print(final_result)\n  }\n}\n\n\n\n\n\n\n\n\nModel 1 - Topic 3 \nModel 2 - Topic 9 \nModel 1 - Topic 2 \nModel 2 - Topic 10 \n# A tibble: 20 × 4\n   term_1       probability_1 term_2       probability_2\n   &lt;chr&gt;                &lt;dbl&gt; &lt;chr&gt;                &lt;dbl&gt;\n 1 german             0.0150  german             0.0138 \n 2 czechoslovak       0.0119  socialist          0.0102 \n 3 polish             0.0113  soviet             0.00986\n 4 soviet             0.0108  czechoslovak       0.00816\n 5 germani            0.0101  albania            0.00793\n 6 people’            0.00766 romanian           0.00732\n 7 poland             0.00693 germani            0.00728\n 8 weapon             0.00632 byelorussian       0.00726\n 9 hydrogen           0.00619 nato               0.00629\n10 geneva             0.00595 albanian           0.00548\n11 arab               0.0271  arab               0.0249 \n12 israel             0.0228  israel             0.0231 \n13 palestin           0.0129  palestin           0.0155 \n14 jerusalem          0.0104  egypt              0.0105 \n15 morocco            0.00949 algerian           0.0101 \n16 tunisia            0.00899 libya              0.00916\n17 jew                0.00821 franc              0.00826\n18 refuge             0.00728 libyan             0.00782\n19 jewish             0.00635 canal              0.00776\n20 franc              0.00500 jordan             0.00729\n\n\n\n\n\n\n\n\n\nModel 1 - Topic 8 \nModel 2 - Topic 3 \nModel 1 - Topic 10 \nModel 2 - Topic 6 \nModel 1 - Topic 7 \nModel 2 - Topic 8 \n# A tibble: 30 × 4\n   term_1    probability_1 term_2    probability_2\n   &lt;chr&gt;             &lt;dbl&gt; &lt;chr&gt;             &lt;dbl&gt;\n 1 african         0.0150  african         0.00885\n 2 africa          0.00815 ghana           0.00692\n 3 portug          0.00735 rwanda          0.00661\n 4 mali            0.00729 portug          0.00620\n 5 portugues       0.00670 uganda          0.00618\n 6 somali          0.00661 burundi         0.00593\n 7 congo           0.00627 africa          0.00530\n 8 austrian        0.00601 portugues       0.00462\n 9 cameroon        0.00564 kenya           0.00460\n10 malagasi        0.00553 oau             0.00452\n# ℹ 20 more rows\n\n\n\n\n\n\n\n\n\nModel 1 - Topic 4 \nModel 2 - Topic 4 \n# A tibble: 10 × 4\n   term_1      probability_1 term_2      probability_2\n   &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt;\n 1 imperialist       0.0162  imperialist       0.0108 \n 2 khmer             0.00847 vietnames         0.0106 \n 3 aggress           0.00749 kampuchea         0.00971\n 4 imperi            0.00718 chines            0.00956\n 5 revisionist       0.00666 lao               0.00954\n 6 albania           0.00659 thailand          0.00947\n 7 albanian          0.00594 nam               0.00870\n 8 viet              0.00576 viet              0.00863\n 9 cambodia          0.00553 ethiopia          0.00833\n10 chines            0.00545 romania           0.00801"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": ".",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  }
]